Necesito agregar mejoras avanzadas al Gantt que ya tenemos, como en Jira. Las mejoras deben aplicarse a todos los componentes que ya est√°n en `src/components/ui-custom/gantt`.

üéØ OBJETIVOS

1. ‚úÖ Scroll horizontal:
   - El Gantt debe tener scroll horizontal cuando hay muchos d√≠as.
   - Para esto, la secci√≥n de la grilla de d√≠as debe estar en un `div` con `overflow-x-auto` y `min-w-fit`.
   - Aseg√∫rate de que las filas (tanto en `GanttGrid` como en `GanttRow`) est√©n sincronizadas y se desplacen juntas.
   - El scroll debe estar en la secci√≥n de timeline, no en toda la p√°gina.

2. ‚úÖ Marcar el d√≠a de HOY:
   - Dentro de `GanttGrid`, agrega una l√≠nea vertical azul (2px) que marque el d√≠a actual.
   - La posici√≥n debe calcularse en base al d√≠a del mes actual y el ancho de d√≠a (ej. 40px).
   - Usa `position: absolute` para colocarla dentro del contenedor de la grilla.

3. ‚úÖ Botones para cambiar la vista:
   - Crea un peque√±o switcher arriba a la derecha del Gantt (puede estar en `Gantt.tsx`).
   - Botones: `D√≠as`, `Semanas`, `Meses`.
   - Cambiar la vista cambia el ancho de cada columna:
     - D√≠as: 40px
     - Semanas: 100px
     - Meses: 160px
   - Usa estado global (Zustand o `useState`) para guardar la vista activa.
   - Reutiliza ese valor en `GanttGrid` y en el c√°lculo de las barras (`GanttBar`) para ajustar `left` y `width`.

4. ‚úÖ Drag & Resize de barras:
   - En `GanttBar.tsx`, implement√° dos `handle` invisibles a los costados (left y right).
   - Usa `react-draggable`, `react-resizable` o l√≥gica manual con `onMouseDown` + `onMouseMove` para permitir modificar:
     - El `startDate` al mover el borde izquierdo.
     - El `endDate` al mover el borde derecho.
   - Al soltar (`onMouseUp`), actualiz√° los valores de fecha.
   - Manten√© los estilos coherentes con el resto del Gantt.

5. ‚úÖ Estilo general:
   - El sistema debe verse profesional, tipo Jira.
   - Usa colores suaves, texto comprimido y barras bien alineadas.
   - Manten√© los t√≠tulos alineados a la izquierda con indentaci√≥n seg√∫n `level`.

üìÅ ARCHIVOS INVOLUCRADOS:
- `Gantt.tsx`: debe contener el switch de vista y el wrapper con scroll horizontal.
- `GanttGrid.tsx`: renderiza los d√≠as o semanas o meses seg√∫n la vista.
- `GanttRow.tsx`: sin cambios por ahora salvo ajuste de ancho.
- `GanttBar.tsx`: implementar los handles de resize + l√≥gica de c√°lculo de ancho.
- `store.ts`: si us√°s Zustand para manejar la vista actual (`day`, `week`, `month`).

üìÖ FUNCIONES √öTILES QUE POD√âS DEFINIR
```ts
const getDayOffset = (startDate: string) => {
  // Devuelve la cantidad de d√≠as desde el inicio del mes actual
};
const getBarPosition = (startDate: string, endDate: string, mode: 'day' | 'week' | 'month') => {
  // Devuelve { left, width } en px seg√∫n la vista actual
};