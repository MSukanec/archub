Quiero que implementes una nueva funcionalidad en el sistema de bit√°cora, que permita **adjuntar fotos y videos** en cada entrada (site_log).

---

## üß± ESTRUCTURA BASE

Ya est√° creada la tabla y el bucket:

- Tabla: `site_log_files`
  - `id`: uuid
  - `site_log_id`: uuid
  - `file_url`: text
  - `file_type`: text (`image`, `video`, etc.)

- Bucket en Supabase: `site-log-files`

No hace falta crear nada nuevo, solo usar lo existente.

---

## ‚úÖ OBJETIVO

Agregar al **modal de creaci√≥n y edici√≥n de bit√°cora** un nuevo acorde√≥n:

üìÅ Fotos y Videos

yaml
Copiar
Editar

Que permita:

- Subir uno o m√°s archivos (drag & drop o explorador)
- Previsualizar im√°genes en miniatura
- Eliminar archivos antes de guardar (en el modal)
- Al guardar la bit√°cora, subir los archivos al bucket `site-log-files`, crear los registros en la tabla `site_log_files` y vincularlos con el `site_log_id` correspondiente

---

## üì¶ DETALLES T√âCNICOS

1. **Posici√≥n del nuevo acorde√≥n**: debe ir en segundo lugar, despu√©s de ‚ÄúInformaci√≥n B√°sica‚Äù y antes de ‚ÄúEventos‚Äù.
2. El componente de subida debe ser reutilizable y estar ubicado en:
src/components/ui-custom/FileUploader.tsx

markdown
Copiar
Editar
Props necesarias:
- `value: File[]`
- `onChange: (newFiles: File[]) => void`
- `accept: string[]` (default: `["image/*", "video/*"]`)
- `maxSizeMB` (opcional)
- `multiple: boolean` (default: true)
3. El uploader debe permitir:
- Previsualizar im√°genes
- Mostrar tipo de archivo si es video
- Borrar archivos localmente antes de subir
4. En el bot√≥n "Guardar", los archivos deben:
- Subirse a Supabase Storage con la carpeta `site-log-files/{site_log_id}/`
- Guardar el URL y el tipo (`image` o `video`) en la tabla `site_log_files`

---

## ‚ú® UX/Visual

- Las miniaturas deben ser cuadradas, con icono de tipo si es video.
- El componente debe verse bien tanto en desktop como mobile.
- En modo edici√≥n debe mostrar los archivos ya subidos previamente (consultando la tabla `site_log_files` por `site_log_id`) con opci√≥n a eliminar.

---

## üìÇ Escalabilidad

Este sistema debe dise√±arse pensando en que ser√° reutilizable para otros m√≥dulos (por ejemplo: movimientos, tareas, etc). Por eso:

- El `FileUploader` debe estar desacoplado del modal
- El upload y escritura a Supabase debe separarse en una funci√≥n utilitaria
src/lib/storage/uploadSiteLogFiles.ts

yaml
Copiar
Editar

---

## üéØ Objetivo Final

- [ ] Nuevo acorde√≥n "Fotos y Videos"
- [ ] Subida de archivos m√∫ltiples con preview y eliminaci√≥n local
- [ ] Upload a Supabase y escritura en tabla al guardar
- [ ] Visualizaci√≥n de archivos existentes al editar
- [ ] C√≥digo reutilizable y bien separado
