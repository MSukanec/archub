Quiero que reestructures completamente la p√°gina `Organizations.tsx` para que cumpla con estas funciones clave:

---

‚úÖ 1. Mostrar todas las organizaciones del usuario

- Us√° el hook `useCurrentUser()` (o el que corresponda) y asum√≠ que devuelve:
  ```ts
  data.organizations: Organization[]
  data.selected_organization: Organization
Mostr√° una card para cada organizaci√≥n dentro de un grid:

tsx
Copiar
Editar
<div className="grid grid-cols-1 md:grid-cols-2 gap-4">...</div>
‚úÖ 2. Agregar bot√≥n ‚ÄúNew Organization‚Äù en el header

Dentro del prop actions del CustomPageLayout, agreg√°:

tsx
Copiar
Editar
<Button size="sm" onClick={handleCreateOrganization}>
  <Plus className="w-4 h-4 mr-2" /> New Organization
</Button>
El bot√≥n va alineado a la derecha del header como parte de los actions.

‚úÖ 3. Seleccionar una organizaci√≥n

Hac√© clic en una card para ejecutar handleSelect(org.id), que:

Llama a una mutation que actualiza el last_organization_id en user_preferences

Hace refetch() de los datos

La organizaci√≥n actualmente seleccionada (data.selected_organization) debe mostrarse resaltada:

tsx
Copiar
Editar
className={cn(
  "border transition hover:shadow-md cursor-pointer",
  org.id === data.selected_organization.id
    ? "border-blue-500 ring-1 ring-blue-500"
    : "border-border"
)}
‚úÖ 4. Soporte para b√∫squeda y filtros

Us√° searchValue para filtrar las organizaciones por nombre (.filter()).

Us√° filters para permitir filtrar por:

"Activas"

"Archivadas"

"De sistema"

El bot√≥n ‚ÄúLimpiar‚Äù debe resetear los filtros.

‚úÖ 5. Visual y componentes

Cada card debe mostrar:

Nombre de la organizaci√≥n

created_at (fecha legible)

is_system y is_active en texto o con iconos secundarios

Us√° Card, CardHeader, CardTitle, CardContent de tu librer√≠a

√çconos: Building, ShieldCheck, BadgeCheck, Calendar, CheckCircle de lucide-react

üéØ Resultado esperado:

Interfaz visual clara, moderna, funcional

El usuario puede ver, buscar, seleccionar y crear organizaciones

Todo el dise√±o debe respetar la arquitectura y sistema visual actual

No se hardcodea ning√∫n dato, se usa lo que devuelve el backend