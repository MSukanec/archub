Prompt para Replit (cópialo tal cual)

Objetivo: Cuando el usuario hace clic en Comprar, el front debe:

Obtener el user_id desde Supabase Auth.

Llamar a la Edge Function create_mp_preference con { user_id, course_slug, price, currency }.

Recibir { init_point } y redirigir a Mercado Pago.

Si el usuario no está logueado, enviarlo a /login.

Cambios requeridos:

Crear (o usar) un cliente de Supabase en el front con estas envs:

VITE_SUPABASE_URL

VITE_SUPABASE_ANON_KEY

Editar el botón Comprar (archivo src/components/PayButton.tsx o similar) para que:

Use supabase.auth.getUser() y obtenga user.id.

Haga fetch("https://wtatvsgeivymcppowrfy.functions.supabase.co/create_mp_preference", { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ user_id: user.id, course_slug, price, currency: "ARS" }) }).

Si la respuesta trae { init_point }, window.location.href = init_point.

Maneje errores con un toast/alert.

Implementación (TypeScript + React):

Crear src/lib/supabase.ts:

import { createClient } from "@supabase/supabase-js";
export const supabase = createClient(
  import.meta.env.VITE_SUPABASE_URL!,
  import.meta.env.VITE_SUPABASE_ANON_KEY!
);


Reemplazar el componente de pago src/components/PayButton.tsx por:

import React, { useState } from "react";
import { supabase } from "@/lib/supabase";

type Props = {
  courseSlug: string;   // ej. "master-archicad"
  price: number;        // ej. 1000
  currency?: string;    // default "ARS"
  className?: string;
};

export default function PayButton({ courseSlug, price, currency = "ARS", className }: Props) {
  const [loading, setLoading] = useState(false);

  const handlePay = async () => {
    setLoading(true);
    try {
      // 1) Obtener usuario logueado
      const { data: { user }, error: eUser } = await supabase.auth.getUser();
      if (eUser || !user) {
        alert("Tenés que iniciar sesión para comprar.");
        // opcional: window.location.href = "/login?next=" + encodeURIComponent(window.location.pathname);
        setLoading(false);
        return;
      }

      // 2) Crear preferencia en MP
      const res = await fetch("https://wtatvsgeivymcppowrfy.functions.supabase.co/create_mp_preference", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          user_id: user.id,           // ← IMPORTANTE
          course_slug: courseSlug,
          price: Number(price),
          currency
        })
      });

      const data = await res.json();
      if (!res.ok) {
        console.error("create_mp_preference error:", data);
        alert("No se pudo iniciar el pago. Intentalo de nuevo.");
        setLoading(false);
        return;
      }

      // 3) Ir a Mercado Pago
      const init_point = data?.init_point || data?.sandbox_init_point;
      if (!init_point) {
        console.error("Respuesta sin init_point:", data);
        alert("No pudimos obtener el link de pago.");
        setLoading(false);
        return;
      }
      window.location.href = init_point;
    } catch (e) {
      console.error(e);
      alert("Ocurrió un error al iniciar el pago.");
      setLoading(false);
    }
  };

  return (
    <button onClick={handlePay} disabled={loading} className={className}>
      {loading ? "Redirigiendo..." : "Comprar"}
    </button>
  );
}


Asegurar:

.env del front tiene VITE_SUPABASE_URL y VITE_SUPABASE_ANON_KEY.

El botón se usa así:

<PayButton courseSlug="master-archicad" price={1000} />


No tocar back por ahora. Solo front. Quiero que external_reference quede como:

<user_id>|master-archicad|null


para que el webhook pueda matricular y loguear el pago automáticamente.

Por qué con esto se arregla

Tu webhook ya funciona y llega (200), pero en los logs vimos external_reference |master-archicad|null (sin user_id). Al enviar user_id desde el front, la Edge Function arma bien la external_reference y el webhook:

inserta en payments_log,

hace upsert en course_enrollments con status: "active".

Si Replit te pide más contexto del proyecto, decile que el botón actual “Comprar” debe reemplazarse por el de arriba y que use supabase.auth.getUser() para recuperar el ID.