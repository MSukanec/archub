Necesito que crees un sistema de Gantt básico como el de Jira, con las siguientes condiciones:

🔧 ESTRUCTURA DE COMPONENTES
Crea una carpeta nueva:  
`src/components/ui-custom/gantt`

Dentro, crea estos archivos:

1. `Gantt.tsx` – Componente principal que renderiza todo el Gantt.
2. `GanttGrid.tsx` – Renderiza la cabecera con los días del mes.
3. `GanttRow.tsx` – Renderiza una fila (fase o tarea).
4. `GanttBar.tsx` – Renderiza la barra horizontal de una tarea en el timeline.
5. `mockData.ts` – Contiene datos simulados de fases y tareas para probar.

🧠 LÓGICA DE COMPONENTES

- Cada fase es un `GanttRow` con `type="phase"`, `level=0`, sin barra.
- Cada tarea es un `GanttRow` con `type="task"`, `level=1`, que incluye una `GanttBar`.
- `GanttGrid` debe renderizar los días del mes (1 al 31).
- Las barras deben calcularse en `left` y `width` en base a los días.

📏 DETALLES DE ESTILO Y CÁLCULO

- Ancho de día: 40px
- Las barras deben ser `<div>` con `absolute`, altura 20px, color gris oscuro.
- Las filas deben tener 40px de alto.
- Usa Tailwind.

📦 EXAMPLE DE DATOS EN `mockData.ts`
```ts
export const mockPhases = [
  {
    id: 'phase-1',
    title: 'Anteproyecto',
    tasks: [
      {
        id: 'task-1',
        title: 'Estudio preliminar',
        startDate: '2025-07-01',
        endDate: '2025-07-08',
        assignee: 'Matías'
      },
      {
        id: 'task-2',
        title: 'Entrega cliente',
        startDate: '2025-07-09',
        endDate: '2025-07-12',
        assignee: 'Lucía'
      }
    ]
  },
  {
    id: 'phase-2',
    title: 'Proyecto Ejecutivo',
    tasks: [
      {
        id: 'task-3',
        title: 'Planos eléctricos',
        startDate: '2025-07-05',
        endDate: '2025-07-20',
        assignee: 'Carlos'
      }
    ]
  }
];
📄 ESTRUCTURA FINAL DE Gantt.tsx

tsx
Copiar
Editar
import { GanttGrid } from './GanttGrid';
import { GanttRow } from './GanttRow';
import { mockPhases } from './mockData';

export const Gantt = () => {
  return (
    <div className="border border-gray-200 rounded text-sm">
      <GanttGrid />
      {mockPhases.map(phase => (
        <div key={phase.id}>
          <GanttRow type="phase" title={phase.title} level={0} />
          {phase.tasks.map(task => (
            <GanttRow
              key={task.id}
              type="task"
              title={task.title}
              startDate={task.startDate}
              endDate={task.endDate}
              assignee={task.assignee}
              level={1}
            />
          ))}
        </div>
      ))}
    </div>
  );
};
💡 EXTRA

En el futuro podrás agregar drag&drop, íconos de persona, porcentaje de avance y edición in-place como en Jira.

Asegurate de usar fecha actual para calcular bien left y width.