Quiero que hagas el sistema de acciones flotantes en `CustomTable.tsx` de forma completamente **escalable y reutilizable**. Para eso:

---

### ‚úÖ PASO 1: Crear componente `TableRowActions.tsx`

Ubicaci√≥n:

src/components/ui-custom/TableRowActions.tsx

php
Copiar
Editar

Contenido:

```tsx
import { cn } from "@/lib/utils"

interface TableRowAction {
  icon: React.ReactNode
  label: string
  onClick: () => void
  variant?: "default" | "destructive" | "primary" | "muted"
}

export function TableRowActions({
  actions,
  className,
}: {
  actions: TableRowAction[]
  className?: string
}) {
  return (
    <div
      className={cn(
        "absolute top-1 right-2 hidden md:flex gap-2 opacity-0 group-hover:opacity-100 transition z-10",
        className
      )}
    >
      {actions.map((action, idx) => (
        <button
          key={idx}
          onClick={action.onClick}
          title={action.label}
          className={cn(
            "w-5 h-5 flex items-center justify-center text-muted hover:text-foreground transition",
            action.variant === "destructive" && "text-destructive hover:text-red-600",
            action.variant === "primary" && "text-primary hover:text-blue-600"
          )}
        >
          {action.icon}
        </button>
      ))}
    </div>
  )
}
‚úÖ PASO 2: Actualizar CustomTable.tsx
En cada fila (<tr>), agreg√° la clase group

En la celda de acciones (ej: √∫ltima columna), agreg√°:

tsx
Copiar
Editar
<TableRowActions
  actions={row.actions}
/>
Asegurate de pasar las acciones como prop a cada fila, por ejemplo:

tsx
Copiar
Editar
actions={[
  {
    label: "Editar",
    icon: <Pencil className="w-4 h-4" />,
    onClick: () => openEditModal(row),
    variant: "primary",
  },
  {
    label: "Eliminar",
    icon: <Trash className="w-4 h-4" />,
    onClick: () => confirmDelete(row),
    variant: "destructive",
  },
]}
‚öôÔ∏è CONSIDERACIONES T√âCNICAS
TableRowActions solo debe mostrarse en md: y hacia arriba (hidden md:flex)

Debe colocarse dentro de una celda con relative

El bot√≥n no debe desplazar contenido, debe superponerse con absolute

üéØ El objetivo es tener un sistema reutilizable para mostrar acciones por hover en cualquier tabla de la app, sin repetir l√≥gica, y sin depender de columnas espec√≠ficas.