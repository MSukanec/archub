Necesito que actualices `Projects.tsx` y `NewProjectModal.tsx` con las siguientes instrucciones.  
Todo el dise√±o sigue el est√°ndar definido en `/prompts/ai-page-template.md`, por lo que ten√©s que respetarlo.

---

## ‚úÖ Estructura visual (cards, no tabla)

Actualmente se muestran proyectos con un layout de tarjetas (cards). Manten√© ese sistema, **pero cada card debe ocupar el 100% del ancho** disponible y organizar la informaci√≥n como una **fila horizontal** (tipo tabla visual), como en la referencia visual que te muestro.

Cada card debe mostrar, en este orden:

| Fecha | Creador | Nombre | Tipolog√≠a | Modalidad | Estado | Acciones |

- El campo **Creador** debe mostrar el avatar y el nombre.
- El campo **Acciones** incluye: bot√≥n para editar (abre modal) y para eliminar (confirma).

---

## ‚úÖ Modal de Nuevo Proyecto

Actualmente el modal funciona pero da errores, y le faltan campos clave.

### Errores a corregir:
- El modal lanza: `Error: No se encontr√≥ la membres√≠a del usuario en esta organizaci√≥n`.  
  Este error ocurre porque no est√°s pasando el `organization_member_id` correcto.  
  Deb√©s obtenerlo desde `archub_get_user()` y usarlo al crear el proyecto.

### Campos requeridos:

El modal debe incluir (en este orden):

1. Fecha de creaci√≥n (`created_at`)
2. Miembro creador (`created_by` ‚Üí mostrar nombre y avatar, no editable)
3. Nombre del proyecto (`name`)
4. Tipolog√≠a (`project_type_id`, viene de tabla `project_types`)
5. Modalidad (`modality_id`, viene de tabla `project_modalities`)
6. Estado (`status`: planning, active, completed, etc.)

Los campos `name`, `status`, `created_by`, `created_at`, `organization_id`, `is_active` van a la tabla `projects`.

Los campos `project_type_id` y `modality_id` se guardan en `project_data`, usando `project_id` como clave.

---

## ‚úÖ Comportamiento y detalles t√©cnicos

- Usar Supabase RPC para obtener datos de usuario (`archub_get_user`)
- Usar React Query para cargar tipolog√≠as y modalidades (tablas: `project_types`, `project_modalities`)
- Al editar un proyecto, el modal debe rellenarse con los datos existentes (tanto de `projects` como de `project_data`)
- El bot√≥n ‚ÄúNuevo Proyecto‚Äù abre el modal en modo creaci√≥n
- El bot√≥n de editar dentro de cada card abre el modal en modo edici√≥n
- El bot√≥n de eliminar muestra confirmaci√≥n y luego borra el proyecto

---

## ‚úÖ Est√©tica

- Todos los estilos deben venir de Tailwind (`index.css`)
- Los labels no deben estar todos rojos, solo marcar error si un campo es inv√°lido
- No usar estilos inline
- El dise√±o debe ser elegante, limpio, como en la referencia de LemonSqueezy

---

## üî• Importante

- No usar datos de ejemplo inventados
- No usar campos que no est√©n en Supabase (como `budget`, `team_size`, etc.)
- Toda inserci√≥n debe respetar las relaciones reales
- No modificar columnas fuera de las permitidas