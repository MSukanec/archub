Necesito que corrijas el comportamiento visual y estructural de mi componente Gantt para que funcione exactamente como en Jira, sin romper lo que ya está hecho. Las mejoras recientes sumaron cosas buenas, pero rompieron otras fundamentales. A continuación te detallo punto por punto:

---

### 🔧 1. Sincronización vertical entre columnas

✅ PROBLEMA:
- El encabezado de la **columna izquierda** (“Elementos”) y el encabezado del **timeline** (mes + días) están desfasados verticalmente.
- Las filas de las fases/tareas en la columna izquierda no están alineadas con las barras de la derecha.

✅ SOLUCIÓN:
- El encabezado de la columna izquierda y el de la grilla de fechas (`GanttGrid`) deben compartir la **misma altura exacta** (ej: `h-20` o la suma de `h-10` para meses y `h-10` para días).
- Las filas del listado (izquierda) y del timeline (derecha) deben usar la misma clase base de altura (ej: `h-10` por fila).
- Asegurate que ambas secciones estén perfectamente sincronizadas verticalmente.

---

### 🔧 2. Encabezado de meses y días en la misma altura

✅ PROBLEMA:
- Actualmente los meses (`GanttGrid` → línea superior) ocupan una fila adicional arriba de los días, lo que rompe la alineación vertical con el encabezado de la izquierda.

✅ SOLUCIÓN:
- Como en Jira, la cabecera debe tener solo **una fila de altura fija** (`h-20`) y dentro de esa fila se deben mostrar:
  - El **mes**, cuando cambia.
  - El **día de la semana** y el **número de día**.
- Podés mostrar el mes como un pequeño texto sobre el primer día del mes o usar `absolute` si querés superponerlo levemente.

---

### 🔧 3. Scroll horizontal debe estar solo en el timeline (y no romper el layout)

✅ PROBLEMA:
- El scroll horizontal del timeline está bien ubicado, pero su barra visual está alineada con el encabezado, lo que rompe el diseño.

✅ SOLUCIÓN:
- Dejá **espacio en blanco debajo del encabezado** (como en Jira) para que la barra de scroll no se mezcle con los encabezados.
- Usá `padding-bottom` o un `div` espaciador para separar el scroll visualmente.
- Asegurate que la columna izquierda no se desplace horizontalmente.

---

### 🔧 4. Hover desacoplado

✅ PROBLEMA:
- Actualmente, si hacés hover sobre una tarea (barra a la derecha) o su nombre (texto a la izquierda), no parecen estar conectados.

✅ SOLUCIÓN:
- Asigná un `data-id` común para cada fase/tarea tanto en el `GanttRow` como en el listado izquierdo, y al hacer `hover` sobre uno, agregale una clase `hovered` o `bg-blue-50` a ambos.
- Esto puede lograrse con un pequeño estado global en Zustand o con eventos de DOM (`onMouseEnter`, `onMouseLeave`) sincronizados.

---

### 🔧 5. Botones de vista (día / semana / mes) rotos

✅ PROBLEMA:
- Actualmente los botones de `Días / Semanas / Meses` **solo cambian la cantidad de días renderizados**, pero **no agrupan las columnas** ni ajustan el comportamiento como Jira.

✅ SOLUCIÓN:
- En modo `semana`:
  - Mostrar una columna por semana (no por día).
  - Cada columna representa 7 días, con título del rango (`8–14 jul`).
- En modo `mes`:
  - Una columna por mes, con título como `Julio 2025`.
- Ajustá `getDateArray` y `getColumnWidth()` para que calculen las columnas correctamente por vista (`day`, `week`, `month`).

---

### 🔧 6. Asegurate de que la estructura esté clara

✅ Referencias:
- `Gantt.tsx`: coordina izquierda y derecha.
- `GanttGrid.tsx`: debe renderizar cabecera compacta (una sola altura total).
- `GanttRow.tsx` y `GanttBar.tsx`: deben mantenerse alineados verticalmente.
- `DesignTimeline.tsx`: solo pasa props, no modificar acá por ahora.

✅ Bonus:
- Si es posible, hacé que el “Ir a HOY” scrollee centrado también para vista `semana` y `mes`.

---

📌 Recordá: **No cambies la lógica de datos ni la integración con Supabase. Solo enfocate en lo visual y estructural para replicar la experiencia Jira con precisión.**
