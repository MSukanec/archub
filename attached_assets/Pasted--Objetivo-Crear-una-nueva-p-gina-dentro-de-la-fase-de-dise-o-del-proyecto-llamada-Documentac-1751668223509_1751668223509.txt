## Objetivo

Crear una nueva página dentro de la fase de diseño del proyecto llamada **"Documentación"**, que permita al usuario gestionar todos los archivos y entregables asociados al proyecto: planos, PDFs, renders, etc.

---

## 1. Estructura general

La página debe mostrar los documentos en formato **cards agrupadas por carpeta lógica** o **por fase del cronograma** (`design_project_phases`).

Agregar un **toggle superior** con las dos vistas posibles:
- 📁 Vista por carpeta (Ej: "Anteproyecto", "Ejecutivo", "Render Final")
- 🧱 Vista por fase de diseño

En cada agrupación mostrar los documentos como **cards** que incluyan:

- Nombre del archivo
- Icono por tipo (`.pdf`, `.dwg`, `.jpg`, etc.)
- Fecha de carga
- Estado (`pendiente`, `en revisión`, `aprobado`, `rechazado`)
- Botón de descarga
- Menú contextual con opciones:
  - Ver detalles
  - Reemplazar archivo
  - Cambiar estado
  - Eliminar

---

## 2. Subida de documento

Botón superior derecho: `+ Subir Documento`

Abre un **modal con el siguiente formulario**:

- Nombre del documento (input)
- Archivo (input file)
- Carpeta lógica (`select` con valores: Anteproyecto, Ejecutivo, Render, Otro)
- Fase de diseño (opcional, `select` que consulta `design_project_phases`)
- Comentario o descripción (textarea opcional)
- Visibilidad (`select`: solo equipo / compartido con cliente)
- Estado inicial (`select`: pendiente / en revisión / aprobado / rechazado)
- Versión inicial (campo oculto o fijo en 1)

---

## 3. Al guardar:

1. Subir el archivo al bucket `design-documents` (ya existe, no es público).
2. Generar el `file_path` con un UUID y extensión.
3. Usar `.getPublicUrl()` para guardar `file_url`.
4. Insertar en la tabla `design_documents`:

```ts
{
  name,
  description,
  file_path,
  file_url,
  file_type,
  version_number: 1,
  project_id,
  organization_id,
  design_phase_id (opcional),
  folder,
  status,
  created_by: user.id,
}
4. Base de datos
Ya está creada la tabla design_documents con RLS activas. Todos los archivos deben estar correctamente relacionados con esta tabla para que sean visibles.

Resultado esperado
El usuario puede subir, visualizar y agrupar documentos del proyecto.

Cada documento está versionado, tiene estado, y puede vincularse a una fase del cronograma.

Los archivos se cargan correctamente al bucket design-documents y su acceso está protegido por RLS.