## Objetivo

Crear un sistema de modal reutilizable llamado `SlideModal` en la carpeta `src/components/modal`, que permita gestionar múltiples vistas internas con navegación animada tipo “deslizar”, como si cada vista fuera una pantalla dentro del modal.

Este modal se usará en toda la app Archub (bitácora, movimientos, fotos, tareas, etc.) como base para todos los formularios que tienen múltiples bloques opcionales o contextuales.

---

## Estructura y comportamiento

Crear el componente principal:

src/components/modal/SlideModal.tsx

csharp
Copiar
Editar

Este componente debe aceptar:

### Props:
```ts
{
  title?: string
  views: Record<string, React.ReactNode> // cada vista es una "pantalla interna"
  initialView?: string // por defecto "main"
  onClose?: () => void
  onSaveAll?: () => void
}
Comportamiento:
Renderiza la vista activa (activeView)

Permite navegar entre vistas con función interna navigateTo(viewId: string)

Usa animación tipo slide (izquierda ↔ derecha) entre vistas

Muestra un header fijo con:

Botón de “volver” si no está en la vista principal

Título dinámico (puede venir de prop o desde cada vista)

Botón X de cerrar si está en main o onClose siempre

Archivos a crear:
swift
Copiar
Editar
src/components/modal/SlideModal.tsx        // componente base
src/components/modal/useSlideNavigation.ts // hook para manejar vista actual
Extras visuales:
Animación de slide con Tailwind (transition-transform, translate-x-0, translate-x-full, etc.)

Fondo modal: semi-transparente (bg-background/80 backdrop-blur)

Card modal centrada (rounded-xl, shadow-xl, w-full max-w-md, etc.)

Compatible con modo oscuro

Encabezado (Header) debe contener:

Volver (si no es vista inicial)

Título

X para cerrar

Ejemplo de uso en una vista:
tsx
Copiar
Editar
<SlideModal
  title="Bitácora del Día"
  initialView="main"
  views={{
    main: <ResumenBitacora />,
    clima: <FormularioClima />,
    equipo: <FormularioEquipo />,
    fotos: <FormularioFotos />
  }}
  onClose={() => setOpen(false)}
  onSaveAll={handleGuardar}
>
Y desde cada vista interna se podrá hacer:

tsx
Copiar
Editar
const { navigateTo } = useSlideNavigation()

<Button onClick={() => navigateTo("equipo")}>+ Añadir equipo</Button>
Consideraciones
El sistema debe estar encapsulado dentro de SlideModal con su propio hook (useSlideNavigation)

Cada vista puede tener su propio encabezado si lo desea, o reutilizar el del modal

El componente SlideModal debe exportarse como default y ser reutilizable en cualquier parte de la app

yaml
Copiar
Editar
