Quiero que crees los siguientes tres archivos y los guardes en sus respectivas carpetas:

1. `src/components/ui-custom/CustomRestricted.tsx`
2. `src/hooks/usePlanFeatures.ts`
3. `src/utils/restrictions.ts`

---

### 1. CustomRestricted.tsx

Este componente se usa para **bloquear contenido de la interfaz** cuando:

- El usuario super√≥ un l√≠mite de su plan (ej: max_projects).
- El plan no incluye una funcionalidad (ej: export_pdf_custom).
- La funcionalidad est√° marcada como "coming soon", sin importar el plan.

üîß Props:
- `feature?: string` ‚Äì nombre de la feature a evaluar.
- `current?: number` ‚Äì valor actual (para evaluar si supera el l√≠mite).
- `reason?: "coming_soon" | string` ‚Äì alternativa para bloquear algo por otro motivo.
- `children: React.ReactNode` ‚Äì lo que se renderiza normalmente (bot√≥n, opci√≥n, card, etc.).

üß† Comportamiento:
- Si se detecta que est√° restringido (por feature o reason), debe:
  - Aplicar `relative`, `blur-[2px]`, `pointer-events-none`, `opacity-60`.
  - Mostrar un √≠cono de candado (`üîí`) centrado encima (`absolute`).
  - Al hacer hover, mostrar un `Popover` con un mensaje explicativo y opcionalmente un bot√≥n con link para "Actualizar plan".
- Si no est√° restringido, renderiza directamente el `children`.

üíÖ Us√° Tailwind para todos los estilos.

---

### 2. usePlanFeatures.ts

Hook que devuelve funciones √∫tiles para consultar el plan de la organizaci√≥n actual.

Debe devolver:

```ts
{
  features: Record<string, any>;
  can: (feature: string) => boolean;
  limit: (feature: string) => number;
}
Extrae los datos del plan desde el contexto o store donde est√© guardada la organizaci√≥n activa, asumiendo que tiene organization.plan?.features disponible como JSON.

3. restrictions.ts
Archivo de utilidades que mapea los motivos de restricci√≥n (feature o reason) a un mensaje y un bot√≥n de acci√≥n opcional.

Ejemplo del formato:

ts
Copiar
Editar
export const restrictionMessages = {
  export_pdf_custom: {
    message: "Esta funcionalidad est√° disponible solo en el plan PRO.",
    actionLabel: "Actualizar plan",
    actionUrl: "/billing",
  },
  max_projects: {
    message: "Ya alcanzaste el m√°ximo de proyectos para tu plan actual.",
    actionLabel: "Ver planes",
    actionUrl: "/billing",
  },
  coming_soon: {
    message: "Esta funci√≥n estar√° disponible pr√≥ximamente.",
    actionLabel: "",
    actionUrl: "",
  },
  // ...otros
};
El componente CustomRestricted debe leer desde ac√° seg√∫n el feature o reason.

üéØ El objetivo es que yo pueda usar este componente as√≠:

tsx
Copiar
Editar
<CustomRestricted feature="export_pdf_custom">
  <BotonDescargar />
</CustomRestricted>

<CustomRestricted feature="max_projects" current={projects.length}>
  <Button>Nuevo Proyecto</Button>
</CustomRestricted>

<CustomRestricted reason="coming_soon">
  <Button>Exportar a IA</Button>
</CustomRestricted>
Asegurate de que:

El componente renderice correctamente sobre cualquier tipo de children.

La l√≥gica de restricci√≥n est√© clara y centralizada.

El popover se vea bien y tenga sentido sem√°ntico y visual.

Cada archivo debe guardarse en su carpeta correspondiente. Us√° buen dise√±o de c√≥digo, buena legibilidad y manten√© consistencia con el resto del proyecto.