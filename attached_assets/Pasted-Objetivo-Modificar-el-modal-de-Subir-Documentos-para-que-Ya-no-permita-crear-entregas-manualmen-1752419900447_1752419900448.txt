Objetivo: Modificar el modal de “Subir Documentos” para que:

Ya no permita crear entregas manualmente (sin input ni botón +).

En su lugar, cree automáticamente una nueva entrega (grupo) al hacer submit si el usuario no seleccionó una entrega existente.

El nombre de la entrega se genere automáticamente usando la función generate_next_document_group_name(folder_id) en Supabase.

El usuario sólo ve un campo opcional para ingresar una descripción de la entrega, y un campo para seleccionar una entrega existente (si quiere reutilizarla).

✅ Cambios en el formulario del modal:
Carpeta (folder_id) → sigue igual.

Grupo/Entrega (group_id) debe:

Mostrar un dropdown con entregas existentes para la carpeta seleccionada.

Ya no debe tener botón + para crear entrega manual.

Si no se selecciona ninguna entrega, al presionar “Subir Documentos”:

Se llama a generate_next_document_group_name(folder_id) vía RPC.

Se crea una nueva fila en design_document_groups con:

folder_id

name = resultado del RPC (ej: v1, v2, etc.)

description = valor del input de descripción (nuevo campo opcional)

created_by = auth.user.id

Se usa el id resultante como group_id para los documentos.

Archivos:

Se permite subir múltiples.

Cada uno se inserta como fila en design_documents, con:

group_id, folder_id, file_url, name, created_by

Estado:

Puede mantenerse como dropdown (Pendiente, En revisión, Aprobado).

Se guarda en cada documento (o en el grupo si se decide así).

🖼️ UI esperada:
El campo Grupo/Entrega es un select, sin botón para crear.

Abajo del select, un input opcional de texto: “Descripción de esta entrega”.

Si el usuario no selecciona grupo, se genera uno automáticamente al hacer submit.

El usuario nunca ve ni puede escribir el nombre de la entrega (se genera como v1, v2, etc.).

🔧 Backend RPC (ya creada en Supabase):
Llamar a:

ts
Copiar
Editar
const { data, error } = await supabase.rpc("generate_next_document_group_name", {
  p_folder_id: selectedFolderId
});
Luego insertar la nueva entrega:

ts
Copiar
Editar
const { data: newGroup } = await supabase.from("design_document_groups").insert({
  folder_id: selectedFolderId,
  name: data, // 'v1', 'v2', etc.
  description: form.descripcion,
  created_by: auth.user.id
}).select().single();
Y usar newGroup.id como group_id para los archivos.