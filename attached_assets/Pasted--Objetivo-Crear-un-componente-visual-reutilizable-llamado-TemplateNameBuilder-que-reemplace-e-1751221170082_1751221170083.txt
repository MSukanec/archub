## Objetivo

Crear un componente visual reutilizable llamado `TemplateNameBuilder` que reemplace el campo de texto tradicional de ‚ÄúPlantilla de Nombre‚Äù por un sistema visual donde se puedan insertar par√°metros din√°micos (`{{parameter}}`) seleccion√°ndolos desde una lista.

Este componente se utilizar√° dentro del modal `EditTaskTemplateModal.tsx` o `TaskTemplateModal.tsx`.

---

## Requisitos funcionales

- El componente debe permitir construir una frase con:
  - partes de **texto libre**
  - partes que representen **par√°metros din√°micos** (tomados de la tabla `task_template_parameters`)
- Debe renderizar los par√°metros visualmente como chips, pill buttons o tags con el `label` correspondiente (ej: `Material`, `Espesor`, etc.).
- Internamente, el resultado final debe guardarse como una string con `{{name}}` (ej: `Muro de {{material}} con {{mortar_type}}...`).

---

## Detalles t√©cnicos

### üßæ Datos

- La tabla `task_template_parameters` ya existe.
- Cada template (`task_templates`) tiene un conjunto de par√°metros relacionados (por `template_id`) ya cargados.
- Campos relevantes: `name`, `label`, `type`, `position`, etc.

### üì§ Output final

El componente debe emitir un string `value` como:
```ts
"Muro de {{material}} con {{mortar_type}}, espesor {{thickness}} cm en {{location}}"
üéØ UI deseada
Un √°rea visual (como un editor de texto simplificado con chips).

Un bot√≥n ‚Äú+ Insertar par√°metro‚Äù que abre un popover o dropdown con los par√°metros disponibles para ese template_id.

Posibilidad de insertar texto libre entre par√°metros.

Chips editables o eliminables.

Soporte para reordenar si es f√°cil (drag and drop opcional).

üì¶ Props sugeridas para TemplateNameBuilder
tsx
Copiar
Editar
interface TemplateNameBuilderProps {
  value: string; // string actual con {{parametros}} y texto
  onChange: (newValue: string) => void;
  parameters: TaskTemplateParameter[]; // lista desde Supabase para ese template
  disabled?: boolean;
}
‚úÖ Resultado esperado
El usuario puede construir la plantilla de nombre visualmente y el sistema genera internamente el string correcto con {{param}}. No necesita escribir {{thickness}} manualmente.

Extras si da el tiempo
Validaci√≥n visual (ej: advertir si se repite un par√°metro).

Tooltips sobre los chips mostrando type, unidad, etc.

Tooltip flotante que muestra c√≥mo quedar√° la frase con valores de ejemplo.