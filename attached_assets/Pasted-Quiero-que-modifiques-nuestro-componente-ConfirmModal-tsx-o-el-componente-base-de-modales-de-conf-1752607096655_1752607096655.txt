Quiero que modifiques nuestro componente `ConfirmModal.tsx` (o el componente base de modales de confirmación) para que pueda funcionar de dos maneras:

---

## 🧩 Modo 1 – Eliminación simple (el actual)

Este comportamiento NO debe romperse. El modal muestra:

- Un texto de advertencia (acción irreversible)
- Botones:
  - Cancelar (25%)
  - Eliminar (75%)

Este modo debe seguir funcionando con una prop tipo `mode="simple"`.

---

## 🚀 Modo 2 – Eliminación con opción de reemplazo (`mode="replace"`)

Este es el nuevo comportamiento que quiero que implementes. El modal muestra:

### ✏️ Texto:

> Esta categoría está en uso. Podés:
> - Reemplazarla por otra categoría
> - Eliminarla definitivamente (los movimientos quedarán sin categoría asignada)

### 🔄 Select 1 (obligatorio):

Label: ¿Qué acción querés realizar?

Opciones:
- `"Eliminar definitivamente"` (value: `delete`)
- `"Reemplazar por otra"` (value: `replace`)

Este select define el flujo del modal.

---

### 📥 Select 2 (condicional):

- Solo se muestra si la opción seleccionada es `"replace"`
- Label: ¿Por cuál categoría querés reemplazarla?
- Las opciones vienen por prop: `replacementOptions: { label: string; value: string }[]`
- Validación: No debe permitir seleccionar la misma categoría que se está eliminando

---

### ✅ Botones (siempre son dos):

- ❌ Cancelar → Cierra el modal
- 🟩 Confirmar → Cambia su `label` dinámicamente:
  - Si la acción es "Eliminar": `Eliminar categoría`
  - Si es "Reemplazar": `Reemplazar categoría`

Al hacer clic en confirmar:
- Si es `"delete"` → ejecuta `onDelete()`
- Si es `"replace"` → ejecuta `onReplace(newCategoryId)`

---

## 🧩 Props necesarias:

```tsx
<ConfirmModal
  mode="replace"
  title="Eliminar categoría"
  description="Esta categoría está en uso..."
  replacementOptions={[{ label: "Honorarios", value: "abc-123" }, ...]}
  currentCategoryId="idActual"
  onCancel={...}
  onDelete={...}
  onReplace={(newId) => {...}}
/>
🎯 El objetivo es mantener siempre la UX clara y limpia, sin necesidad de abrir un segundo modal ni mostrar 3 botones. Todo se resuelve con un select inteligente y lógica condicional.