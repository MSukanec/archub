DECLARE
  current_user_id uuid;
  result json;
BEGIN
  -- Obtener el ID del usuario autenticado
  current_user_id := auth.uid();

  -- Retornar null si no hay usuario autenticado
  IF current_user_id IS NULL THEN
    RETURN NULL;
  END IF;

  -- Construir el objeto JSON con toda la información del usuario
  SELECT json_build_object(
    -- Usuario
    'user', json_build_object(
      'id', u.id,
      'auth_id', u.auth_id,
      'email', u.email,
      'full_name', u.full_name,
      'avatar_url', u.avatar_url,
      'avatar_source', u.avatar_source,
      'created_at', u.created_at
    ),

    -- Datos personales
    'user_data', json_build_object(
      'id', ud.id,
      'user_id', ud.user_id,
      'first_name', ud.first_name,
      'last_name', ud.last_name,
      'country', ud.country,
      'birthdate', ud.birthdate,
      'created_at', ud.created_at,
      'updated_at', ud.updated_at
    ),

    -- Preferencias de usuario (last_project_id viene de user_organization_preferences)
    'preferences', json_build_object(
      'id', up.id,
      'user_id', up.user_id,
      'theme', up.theme,
      'sidebar_docked', up.sidebar_docked,
      'last_organization_id', up.last_organization_id,
      'last_project_id', uop.last_project_id,
      'last_user_type', up.last_user_type,
      'onboarding_completed', up.onboarding_completed,
      'created_at', up.created_at,
      'updated_at', up.updated_at
    ),

    -- Organización activa
    'organization', json_build_object(
      'id', o.id,
      'name', o.name,
      'is_active', o.is_active,
      'is_system', o.is_system,
      'logo_url', o.logo_url,
      'created_by', o.created_by,
      'created_at', o.created_at,
      'updated_at', o.updated_at
    ),

    -- Preferencias de organización
    'organization_preferences', json_build_object(
      'organization_id', op.organization_id,
      'default_currency', op.default_currency_id,
      'default_wallet', op.default_wallet_id,
      'pdf_template', op.default_pdf_template_id,
      'created_at', op.created_at,
      'updated_at', op.updated_at
    ),

    -- Plan
    'plan', json_build_object(
      'id', p.id,
      'name', p.name,
      'features', p.features,
      'price', p.price
    ),

    -- Rol y permisos
    'role', json_build_object(
      'id', r.id,
      'name', r.name,
      'permissions', (
        SELECT json_agg(
          json_build_object(
            'id', perm.id,
            'key', perm.key,
            'description', perm.description,
            'category', perm.category
          )
        )
        FROM public.role_permissions rp
        JOIN public.permissions perm ON perm.id = rp.permission_id
        WHERE rp.role_id = r.id
      )
    ),

    -- Todas las organizaciones
    'organizations', (
      SELECT json_agg(
        json_build_object(
          'id', org.id,
          'name', org.name,
          'created_at', org.created_at,
          'is_active', org.is_active,
          'is_system', org.is_system,
          'plan', json_build_object(
            'id', plan.id,
            'name', plan.name,
            'features', plan.features,
            'price', plan.price
          )
        )
      )
      FROM public.organization_members om_all
      JOIN public.organizations org ON org.id = om_all.organization_id
      LEFT JOIN public.plans plan ON plan.id = org.plan_id
      WHERE om_all.user_id = u.id
    ),

    -- Membresías
    'memberships', (
      SELECT json_agg(
        json_build_object(
          'organization_id', om.organization_id,
          'organization_name', org.name,
          'is_active', om.is_active,
          'joined_at', om.joined_at,
          'last_active_at', om.last_active_at,
          'role', json_build_object(
            'id', r2.id,
            'name', r2.name
          )
        )
      )
      FROM public.organization_members om
      JOIN public.organizations org ON org.id = om.organization_id
      JOIN public.roles r2 ON r2.id = om.role_id
      WHERE om.user_id = u.id
    )

  )
  INTO result
  FROM public.users u
  LEFT JOIN public.user_data ud ON ud.user_id = u.id
  LEFT JOIN public.user_preferences up ON up.user_id = u.id
  LEFT JOIN public.organizations o ON o.id = up.last_organization_id
  LEFT JOIN public.organization_preferences op ON op.organization_id = o.id
  LEFT JOIN public.user_organization_preferences uop ON uop.user_id = u.id AND uop.organization_id = o.id
  LEFT JOIN public.organization_members om_active ON om_active.organization_id = o.id AND om_active.user_id = u.id
  LEFT JOIN public.roles r ON r.id = om_active.role_id
  LEFT JOIN public.plans p ON p.id = o.plan_id
  WHERE u.auth_id = current_user_id;

  RETURN result;
END;