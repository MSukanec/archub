Quiero que crees un modal llamado `TaskTemplateEditorModal.tsx` en `src/modals/admin` que me permita gestionar la plantilla de tarea asociada a una subcategoría constructiva (que tiene código de 3 letras como "FFF").

El modal se abre desde la pantalla de categorías, y recibe vía props:

- `categoryId: string` (el ID de la subcategoría en `task_categories`)
- `categoryCode: string` (ej: "FFF")
- `categoryName: string` (ej: "Muros Simples")

### Objetivo del modal:
Permitir al administrador crear o editar la plantilla (`task_templates`) asociada a esta subcategoría y gestionar sus parámetros (`task_template_parameters`).

---

### El modal debe hacer lo siguiente:

#### 1. **Mostrar o crear la plantilla**
- Si ya existe una plantilla con `task_templates.code = categoryCode`, cargarla.
- Si no existe, permitir crearla automáticamente al hacer clic en “Crear Plantilla”.
- Guardar la plantilla con:
  - `code`: igual al `categoryCode`
  - `name`: igual a `categoryName`
  - `category_id`: igual a `categoryId`
  - `is_public`: `true`
  - `scope`: `"organization"`

---

#### 2. **Mostrar los parámetros vinculados**

Para la plantilla existente, mostrar todos los parámetros de `task_template_parameters`, incluyendo:

- Nombre del parámetro (traído desde `task_parameters`)
- Tipo (`input`, `select`, etc.)
- Rol
- Expresión (`expression_template`)
- Unidad (`unit`)
- Obligatorio (`is_required`)
- Orden (`position`)
- Grupo de opciones (`option_group_id`), si aplica

Mostrar esto en una tabla o editor ordenable.

---

#### 3. **Permitir las siguientes acciones por parámetro:**
- ➖ Eliminar de la plantilla
- ✏️ Editar orden, obligatorio, y grupo de opciones
- ➕ Agregar nuevo parámetro existente desde `task_parameters`
  - Mostrar en un `Select` todos los parámetros disponibles
  - Si el tipo es `select`, permitir elegir un `option_group_id` desde `task_parameter_option_groups` que coincidan con el `parameter_id`

---

### Guardado:

- Cada cambio debe guardar directamente en Supabase (`task_template_parameters`)
- Al agregar un nuevo parámetro, insertar en:
  - `task_template_parameters` con `template_id`, `parameter_id`, `option_group_id`, `is_required`, `position`

---

### Estética:

- Modal de ancho grande
- Nombre del código y nombre de la categoría en el encabezado
- Botón “Agregar parámetro”
- Icono que indique si hay parámetros cargados o no
- Botón “Cerrar” o “Listo” para cerrar el modal

Guarda todo en `src/modals/admin/TaskTemplateEditorModal.tsx` y usá tailwind para estilos. Usa React Query para las consultas a Supabase y Zustand si es necesario para estado local.