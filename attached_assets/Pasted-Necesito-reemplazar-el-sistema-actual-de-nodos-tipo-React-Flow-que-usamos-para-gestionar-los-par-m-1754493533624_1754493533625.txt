Necesito reemplazar el sistema actual de nodos (tipo React Flow) que usamos para gestionar los par√°metros de tareas (`task_parameters`) por una **interfaz tipo tabla editable**, m√°s clara, escalable y robusta.

üéØ Objetivo: visualizar, editar y reordenar todos los par√°metros, su jerarqu√≠a (`parent_id`) y su orden relativo (`order`) de forma simple.

---

üß± Estructura base de la tabla `task_parameters`:
- `id` (uuid)
- `name` (texto visible del par√°metro)
- `slug` (identificador √∫nico)
- `parent_id` (uuid o null)
- `order` (entero)
- `type` (opcional, ej. selector, texto, etc.)

---

üñ•Ô∏è Crear un componente de **gesti√≥n de par√°metros** con las siguientes caracter√≠sticas:

1. **Tabla editable** con las siguientes columnas:
   - `Nombre del Par√°metro`
   - `Slug`
   - `Parent` (editable con un select desplegable de los otros par√°metros)
   - `Orden` (n√∫mero editable)
   - `Acciones`: editar, duplicar, eliminar

2. **Jerarqu√≠a visual**: mostrar los par√°metros como √°rbol (indentado seg√∫n profundidad por `parent_id`), como hace Notion o Airtable en sus tablas jer√°rquicas.

3. **Edici√≥n Inline**:
   - Que se pueda cambiar el `parent_id` desde un `<select>` sin loops (ej: no se puede asignar un par√°metro como hijo de su descendiente).
   - Que se pueda reordenar (`order`) manualmente dentro de cada nivel (drag & drop opcional).

4. **Validaciones autom√°ticas**:
   - No permitir loops entre padres/hijos.
   - Mostrar si hay par√°metros hu√©rfanos (sin padre pero que deber√≠an tenerlo).
   - Avisar si hay par√°metros duplicados por `slug`.

5. **Bot√≥n 'Nuevo Par√°metro'** arriba a la derecha:
   - Abre modal para crear un nuevo par√°metro con: `name`, `slug`, `type`, `parent_id`, `order`

6. **Guardado**:
   - Cada cambio (parent, orden, nombre) debe guardarse autom√°ticamente en Supabase usando `update()`.

7. **Carga inicial**:
   - Consultar todos los par√°metros desde Supabase, ordenados por `order`.
   - Construir la jerarqu√≠a de padres/hijos localmente.

8. **Dise√±o UI**:
   - Dark mode, estilo consistente con el resto de la app (tipo Supabase).
   - Usar √≠conos claros para acciones (editar, eliminar, duplicar).
   - Mostrar una l√≠nea vertical o indentaci√≥n para los hijos (tipo √°rbol).

---

üí° Bonus (opcional):
- Agregar b√∫squeda por nombre o slug.
- Permitir expandir/colapsar nodos hijos para mejorar la navegaci√≥n si hay muchos par√°metros.

Este componente debe reemplazar el sistema visual de nodos (React Flow) que usamos actualmente. Queremos m√°s control, menor error y una experiencia m√°s ordenada.