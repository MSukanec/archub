Quiero que modifiques la p√°gina de contactos en `src/pages/contacts/contacts.tsx` siguiendo estas instrucciones:

---

üîÅ FUNCIONALIDAD NUEVA: `linked_user_id`

1. Se ha agregado una nueva columna `linked_user_id` en la tabla `contacts`, que puede vincular un contacto con un usuario real registrado en la tabla `users`.

2. En el modal de creaci√≥n y edici√≥n de contactos (`CreateContactModal.tsx` y `EditContactModal.tsx`), agreg√° un campo de **autocompletado** para buscar y seleccionar usuarios existentes en Archub.

   - Este campo debe consultar la tabla `users` (o un endpoint server si es necesario) por `full_name` o `email`.
   - Debe mostrar como resultado: nombre completo, email, avatar y nombre de organizaci√≥n.
   - Si el usuario selecciona un usuario, se guarda su `id` en `linked_user_id`.

3. Si el campo `linked_user_id` tiene un valor:
   - **No permitir editar los campos** `first_name`, `last_name`, `email`, `company_name`, etc. (deben aparecer deshabilitados).
   - Visualmente mostrar que el contacto est√° vinculado a un usuario real, por ejemplo con un badge tipo `‚úî Usuario de Archub` o similar.

---

üßë‚Äçüíª VISUAL EN LA TABLA DE CONTACTOS:

En la tabla de `contacts.tsx`:

1. Agreg√° una columna con el avatar y nombre del usuario real (si `linked_user_id` est√° presente).
2. En esa fila, en lugar de mostrar datos locales (nombre/email/etc.), us√° los datos del usuario real (de la tabla `users`) si est√°n vinculados.
3. Mostrar √≠cono/link a su perfil (si existe).

---

üé® UX RECOMENDADA:

- En el modal, mostr√° el buscador de usuario como algo opcional.  
  Texto de ayuda: `"Si este contacto ya es un usuario de Archub, vinculalo aqu√≠ para mantener sincronizados sus datos."`
- Si se elige un usuario, mostrar su informaci√≥n en un bloque visual con avatar, nombre, email, etc.
- Bot√≥n para "desvincular usuario" y volver a usar campos editables manuales.

---

üì¶ ARCHIVOS QUE DEB√âS MODIFICAR O USAR:

- `src/pages/contacts/contacts.tsx`
- `src/modals/contacts/CreateContactModal.tsx`
- `src/modals/contacts/EditContactModal.tsx`
- `lib/supabase/users.ts` (crear helper `searchUsersByNameOrEmail(query)` si no existe)
- Usar componente `AvatarWithName` (si existe) o crear uno reusable

---

‚ö†Ô∏è IMPORTANTE

No eliminar ning√∫n campo actual. Solo integrar esta nueva funcionalidad de vinculaci√≥n con usuarios y actualizaci√≥n condicional de la UI. El contacto debe seguir pudiendo existir sin estar vinculado a ning√∫n usuario (`linked_user_id = null`).